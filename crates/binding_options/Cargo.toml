[package]
name = "binding_options"
version = "0.1.0"
edition = "2021"

[dependencies]
rspack_binding_macros                   = { path = "../.rspack_crates/rspack_binding_macros" }
rspack_binding_options                  = { path = "../.rspack_crates/rspack_binding_options" }
rspack_binding_values                   = { path = "../.rspack_crates/rspack_binding_values" }
rspack_core                             = { path = "../.rspack_crates/rspack_core" }
rspack_error                            = { path = "../.rspack_crates/rspack_error" }
rspack_identifier                       = { path = "../.rspack_crates/rspack_identifier" }
rspack_ids                              = { path = "../.rspack_crates/rspack_ids" }
rspack_loader_runner                    = { path = "../.rspack_crates/rspack_loader_runner" }
rspack_loader_sass                      = { path = "../.rspack_crates/rspack_loader_sass" }
rspack_loader_swc                       = { path = "../.rspack_crates/rspack_loader_swc" }
rspack_napi_shared                      = { path = "../.rspack_crates/rspack_napi_shared" }
rspack_plugin_asset                     = { path = "../.rspack_crates/rspack_plugin_asset" }
rspack_plugin_banner                    = { path = "../.rspack_crates/rspack_plugin_banner" }
rspack_plugin_copy                      = { path = "../.rspack_crates/rspack_plugin_copy" }
rspack_plugin_css                       = { path = "../.rspack_crates/rspack_plugin_css" }
rspack_plugin_dev_friendly_split_chunks = { path = "../.rspack_crates/rspack_plugin_dev_friendly_split_chunks" }
rspack_plugin_devtool                   = { path = "../.rspack_crates/rspack_plugin_devtool" }
rspack_plugin_ensure_chunk_conditions   = { path = "../.rspack_crates/rspack_plugin_ensure_chunk_conditions" }
rspack_plugin_entry                     = { path = "../.rspack_crates/rspack_plugin_entry" }
rspack_plugin_externals                 = { path = "../.rspack_crates/rspack_plugin_externals" }
rspack_plugin_hmr                       = { path = "../.rspack_crates/rspack_plugin_hmr" }
rspack_plugin_html                      = { path = "../.rspack_crates/rspack_plugin_html" }
rspack_plugin_javascript                = { path = "../.rspack_crates/rspack_plugin_javascript" }
rspack_plugin_json                      = { path = "../.rspack_crates/rspack_plugin_json" }
rspack_plugin_library                   = { path = "../.rspack_crates/rspack_plugin_library" }
rspack_plugin_limit_chunk_count         = { path = "../.rspack_crates/rspack_plugin_limit_chunk_count" }
rspack_plugin_progress                  = { path = "../.rspack_crates/rspack_plugin_progress" }
rspack_plugin_real_content_hash         = { path = "../.rspack_crates/rspack_plugin_real_content_hash" }
rspack_plugin_remove_empty_chunks       = { path = "../.rspack_crates/rspack_plugin_remove_empty_chunks" }
rspack_plugin_runtime                   = { path = "../.rspack_crates/rspack_plugin_runtime" }
rspack_plugin_schemes                   = { path = "../.rspack_crates/rspack_plugin_schemes" }
rspack_plugin_split_chunks              = { path = "../.rspack_crates/rspack_plugin_split_chunks" }
rspack_plugin_split_chunks_new          = { path = "../.rspack_crates/rspack_plugin_split_chunks_new" }
rspack_plugin_swc_css_minimizer         = { path = "../.rspack_crates/rspack_plugin_swc_css_minimizer" }
rspack_plugin_swc_js_minimizer          = { path = "../.rspack_crates/rspack_plugin_swc_js_minimizer" }
rspack_plugin_warn_sensitive_module     = { path = "../.rspack_crates/rspack_plugin_warn_sensitive_module" }
rspack_plugin_wasm                      = { path = "../.rspack_crates/rspack_plugin_wasm" }
rspack_plugin_web_worker_template       = { path = "../.rspack_crates/rspack_plugin_web_worker_template" }
rspack_plugin_worker                    = { path = "../.rspack_crates/rspack_plugin_worker" }
rspack_regex                            = { path = "../.rspack_crates/rspack_regex" }
rspack_hash                             = { path = "../.rspack_crates/rspack_hash" }
rspack_swc_visitors                     = { path = "../.rspack_crates/rspack_swc_visitors" }
loader_compilation                      = { path = "../loader_compilation" }
plugin_manifest                         = { path = "../plugin_manifest" }
plugin_specilize_module_name            = { path = "../plugin_specilize_module_name" }

futures-util      = { workspace = true }
anyhow            = { workspace = true, features = ["backtrace"] }
async-trait       = { workspace = true }
better_scoped_tls = { workspace = true }
derivative        = { workspace = true }
glob              = { workspace = true }
napi              = { workspace = true, features = ["async", "tokio_rt", "serde-json", "anyhow"] }
napi-derive       = { workspace = true }
rustc-hash        = { workspace = true }
serde             = { workspace = true, features = ["derive"] }
serde_json        = { workspace = true }
tokio             = { workspace = true, features = ["rt", "rt-multi-thread", "macros", "test-util", "parking_lot"] }
tracing           = { workspace = true }
